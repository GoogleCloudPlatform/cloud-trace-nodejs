# Test against this version of Node.js
environment:
  matrix:
  # node.js
  - nodejs_version: "4"
  - nodejs_version: "6"
  - nodejs_version: "8"

cache:
  - node_modules -> package-lock.json, package.json
  - build\test\plugins\fixtures -> test\fixtures\plugin-fixtures.json

services:
  - mongodb
  - mysql
  - postgresql

# Install scripts. (runs after repo cloning)
install:
  # Get the latest stable version of Node.js or io.js
  - ps: Install-Product node $env:nodejs_version
  # Install the Redis
  - nuget install redis-64 -excludeversion
  - redis-64\tools\redis-server.exe --service-install
  - redis-64\tools\redis-server.exe --service-start
  - SET GCLOUD_PROJECT=0
  - SET GCLOUD_TRACE_NEW_CONTEXT=1

before_test:
  - SET PATH=C:\Program Files\MySql\MySQL Server 5.7\bin;%PATH%
  - mysqladmin --host=localhost --user=root --password=Password12! create test
  - SET PGUSER=postgres
  - SET PGPASSWORD=Password12!
  - PATH=C:\Program Files\PostgreSQL\9.4\bin\;%PATH%
  - createdb test

# Post-install test scripts.
test_script:
  # install modules
  - npm install
  # check code style and linting
  - npm run check
  # compile the code
  - npm run compile
  # check that installing this module is OK
  - npm run check-install
  # initialize test fixtures
  - npm run init-test-fixtures
  # run tests
  - npm run test

# Don't actually build using MSBuild
build: off
